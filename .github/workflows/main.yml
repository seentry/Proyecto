name: Deploy Symfony API with MySQL and Nginx

on:
  push:
    branches:
      - despliegueDocker

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Iniciar sesión en Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Construir y subir imagen Symfony
      - name: Construir y subir imagen Symfony
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/symfony-app:latest -f ./PIS/docker/php.Dockerfile PIS/
          docker push ${{ secrets.DOCKER_USERNAME }}/symfony-app:latest

      # Construir y subir imagen Nginx
      - name: Construir y subir imagen Nginx
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/symfony-nginx:latest -f ./PIS/docker/nginx.Dockerfile PIS/
          docker push ${{ secrets.DOCKER_USERNAME }}/symfony-nginx:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout código
        uses: actions/checkout@v4
        with:
          ref: despliegueDocker # Asegura que se usa esta rama

      - name: Transferir el archivo compose.yml al servidor remoto
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.REMOTE_KEY }}
          source: ./PIS/compose.yml
          target: ~/deploy/

      - name: Desplegar en servidor remoto
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.REMOTE_KEY }}
          script: |
            sudo chmod 666 /var/run/docker.sock
            echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
            
            docker compose -f ./deploy/PIS/compose.yml pull
            docker compose -f ./deploy/PIS/compose.yml down
            docker compose -f ./deploy/PIS/compose.yml up -d --force-recreate
            docker image prune || y